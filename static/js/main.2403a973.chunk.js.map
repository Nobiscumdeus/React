{"version":3,"sources":["components/WeatherSearchBar.js","components/WeatherDisplay.js","components/Weather.js","components/TodoForm.js","components/TodoList.js","components/TodoApp.js","components/CrudForm.js","components/Profile.js","components/TicTacToe.js","components/Number.js","components/StudentGrade.js","portal/PortalComponent.js","components/QuizApp.js","App.js","About.js","Contact.js","Home.js","Layout.js","NotFound.js","index.js"],"names":["SearchBar","_ref","onCityChange","_useState","useState","_useState2","_slicedToArray","inputCity","setinputCity","React","createElement","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","WeatherDisplayComponent","city","weatherData","setweatherData","useEffect","fetchWeather","_ref2","_asyncToGenerator","_callee","response","data","_context","fetch","concat","ok","json","console","t0","_x","apply","arguments","main","temp","weather","description","WeatherComponent","setCity","newCity","TodoForm","addTask","task","setTask","trim","TodoList","tasks","deleteTask","log","Fragment","className","map","index","onClick","TodoApp","setTasks","_toConsumableArray","updatedTasks","filter","_","Form","id","textInput","passwordInput","numberInput","emailInput","dateInput","selectInput","textareaInput","checkboxInput","formData","setFormData","_useState3","_useState4","items","setItems","handleChange","event","_event$target","checked","prevData","_objectSpread","_defineProperty","updatedItems","item","Date","now","class","clSs","selected","cols","rows","selectedItem","find","handleEdit","filteredItems","handleDelete","profile","image","imageSize","Profile","src","alt","style","width","height","Square","onSquareClick","Winner","squares","lines","_lines$i","a","b","c","Board","xisNext","setxisNext","Array","fill","setSquares","handleClick","nextSquares","status","winner","CheckNumber","setValue","setMessage","GradingForm","onGradeSubmit","student","setStudent","grade","setGrade","GradingSummary","grades","Grade","_useState5","_useState6","setGrades","PortalComponent","targetId","children","portalRoot","document","getElementById","ReactDOM","createPortal","questions","question","options","correctAnswer","Quiz","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","option","selectedOption","nextQuestion","handleAnswerClick","App","About","color","fontSize","letterSpacing","Contact","styles","h1","href","rel","Home","Layout","Link","to","Outlet","NotFound","createRoot","render","StrictMode","BrowserRouter","Routes","Route","path","element"],"mappings":"6PAiCeA,EA7BC,SAADC,GAAmB,IAAhBC,EAAYD,EAAZC,aAAYC,EAEKC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAApCI,EAASF,EAAA,GAACG,EAAYH,EAAA,GAY7B,OACII,IAAAC,cAAA,WACID,IAAAC,cAAA,QAAMC,SARK,SAACC,GAEhBA,EAAEC,iBACFX,EAAaK,KAMLE,IAAAC,cAAA,SAAOI,KAAK,OACZC,MAAOR,EACPS,YAAY,8BACZC,SAhBY,SAACL,GACrBJ,EAAaI,EAAEM,OAAOH,UAgBZ,IAACN,IAAAC,cAAA,WACHD,IAAAC,cAAA,UAAQI,KAAK,UAAS,mCCzBtCK,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAd,OAAAe,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAAb,GAAA,OAAAO,OAAAI,eAAAC,EAAAC,EAAA,CAAAb,QAAAwB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,GAAA,IAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAAb,GAAA,OAAAY,EAAAC,GAAAb,GAAA,SAAA4B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAAnC,MAAAuC,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAA3C,KAAA,SAAA2C,IAAAD,EAAAE,KAAA/B,EAAA8B,IAAA,MAAAf,GAAA,OAAA5B,KAAA,QAAA2C,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAA+B,OAAA,IAAAC,EAAA1C,OAAA2C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA7C,GAAAG,EAAAkC,KAAAQ,EAAAlC,KAAA8B,EAAAI,GAAA,IAAAE,EAAAP,EAAAtC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAW,GAAA,SAAAO,EAAA9C,GAAA,0BAAA+C,QAAA,SAAAC,GAAAjC,EAAAf,EAAAgD,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAvB,EAAAwB,GAAA,IAAAC,EAAAjD,EAAAqC,KAAA,WAAAhD,MAAA,SAAAwD,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAuB,EAAAlE,KAAA,KAAAmE,EAAAD,EAAAvB,IAAA1C,EAAAkE,EAAAlE,MAAA,OAAAA,GAAA,iBAAAA,GAAAS,EAAAkC,KAAA3C,EAAA,WAAA2D,EAAAG,QAAA9D,EAAAmE,SAAAC,KAAA,SAAApE,GAAAgE,EAAA,OAAAhE,EAAA8D,EAAAC,IAAA,SAAApC,GAAAqC,EAAA,QAAArC,EAAAmC,EAAAC,KAAAJ,EAAAG,QAAA9D,GAAAoE,KAAA,SAAAC,GAAAH,EAAAlE,MAAAqE,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAf,EAAAd,GAAA,iBAAA6B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAd,EAAA,OAAA1C,WAAA,EAAAyE,MAAA,OAAApC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAAgC,EAAArC,EAAAqC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAArC,GAAA,GAAAsC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAtC,EAAAmB,OAAAnB,EAAAwC,KAAAxC,EAAAyC,MAAAzC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAA0C,kBAAA1C,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA2C,OAAA,SAAA3C,EAAAK,KAAA6B,EAAA,gBAAAN,EAAAzB,EAAAX,EAAAE,EAAAM,GAAA,cAAA4B,EAAAlE,KAAA,IAAAwE,EAAAlC,EAAAoC,KAAA,6BAAAR,EAAAvB,MAAAE,EAAA,gBAAA5C,MAAAiE,EAAAvB,IAAA+B,KAAApC,EAAAoC,MAAA,UAAAR,EAAAlE,OAAAwE,EAAA,YAAAlC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAkC,EAAAF,EAAArC,GAAA,IAAA4C,EAAA5C,EAAAmB,SAAAkB,EAAAxD,SAAA+D,GAAA,QAAAC,IAAA1B,EAAA,OAAAnB,EAAAqC,SAAA,eAAAO,GAAAP,EAAAxD,SAAAiE,SAAA9C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAwC,EAAAN,EAAAF,EAAArC,GAAA,UAAAA,EAAAmB,SAAA,WAAAyB,IAAA5C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAAH,EAAA,aAAArC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAkB,EAAAxD,SAAAmB,EAAAK,KAAA,aAAAuB,EAAAlE,KAAA,OAAAsC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAqC,SAAA,KAAA9B,EAAA,IAAAyC,EAAApB,EAAAvB,IAAA,OAAA2C,IAAAZ,MAAApC,EAAAqC,EAAAY,YAAAD,EAAArF,MAAAqC,EAAAkD,KAAAb,EAAAc,QAAA,WAAAnD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAwC,GAAA7C,EAAAqC,SAAA,KAAA9B,GAAAyC,GAAAhD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAA/C,EAAAqC,SAAA,KAAA9B,GAAA,SAAA6C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA1C,KAAAgD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA1B,EAAA0B,EAAAQ,YAAA,GAAAlC,EAAAlE,KAAA,gBAAAkE,EAAAvB,IAAAiD,EAAAQ,WAAAlC,EAAA,SAAA3B,EAAAN,GAAAgB,KAAAgD,WAAA,EAAAJ,OAAA,SAAA5D,EAAAuB,QAAAkC,EAAAzC,WAAAoD,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAA3D,KAAA0D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAA/F,EAAAkC,KAAA0D,EAAAI,GAAA,OAAAlB,EAAAvF,MAAAqG,EAAAI,GAAAlB,EAAAd,MAAA,EAAAc,EAAA,OAAAA,EAAAvF,WAAAkF,EAAAK,EAAAd,MAAA,EAAAc,GAAA,OAAAA,UAAA,UAAAH,iBAAAiB,EAAA,2BAAAxD,EAAArC,UAAAsC,EAAAnC,EAAA0C,EAAA,eAAArD,MAAA8C,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAA9C,MAAA6C,EAAApB,cAAA,IAAAoB,EAAA6D,YAAAnF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAsG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAhE,GAAA,uBAAAgE,EAAAH,aAAAG,EAAAE,QAAA1G,EAAA2G,KAAA,SAAAJ,GAAA,OAAArG,OAAA0G,eAAA1G,OAAA0G,eAAAL,EAAA9D,IAAA8D,EAAAM,UAAApE,EAAAvB,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAApG,UAAAD,OAAA6B,OAAAiB,GAAAuD,GAAAvG,EAAA8G,MAAA,SAAAzE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAlD,WAAAe,EAAAmC,EAAAlD,UAAAW,EAAA,kBAAA6B,OAAA3C,EAAAqD,gBAAArD,EAAA+G,MAAA,SAAAvF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,MAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAAtD,EAAAsG,oBAAA7E,GAAAwF,IAAA/B,OAAAnB,KAAA,SAAAF,GAAA,OAAAA,EAAAO,KAAAP,EAAAlE,MAAAsH,EAAA/B,UAAAjC,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAA+B,OAAAzB,EAAA8B,EAAA,mDAAAhD,EAAAkH,KAAA,SAAAC,GAAA,IAAAC,EAAAlH,OAAAiH,GAAAD,EAAA,WAAA1G,KAAA4G,EAAAF,EAAAtB,KAAApF,GAAA,OAAA0G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA3F,EAAA0G,EAAAI,MAAA,GAAA9G,KAAA4G,EAAA,OAAAlC,EAAAvF,MAAAa,EAAA0E,EAAAd,MAAA,EAAAc,EAAA,OAAAA,EAAAd,MAAA,EAAAc,IAAAlF,EAAA+C,SAAAd,EAAA9B,UAAA,CAAAsG,YAAAxE,EAAA8D,MAAA,SAAAwB,GAAA,GAAA5E,KAAA6E,KAAA,EAAA7E,KAAAuC,KAAA,EAAAvC,KAAA6B,KAAA7B,KAAA8B,WAAAI,EAAAlC,KAAAyB,MAAA,EAAAzB,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAN,SAAAwC,EAAAlC,KAAAgD,WAAAzC,QAAA2C,IAAA0B,EAAA,QAAAb,KAAA/D,KAAA,MAAA+D,EAAAe,OAAA,IAAArH,EAAAkC,KAAAK,KAAA+D,KAAAR,OAAAQ,EAAAgB,MAAA,MAAA/E,KAAA+D,QAAA7B,IAAA8C,KAAA,WAAAhF,KAAAyB,MAAA,MAAAwD,EAAAjF,KAAAgD,WAAA,GAAAG,WAAA,aAAA8B,EAAAlI,KAAA,MAAAkI,EAAAvF,IAAA,OAAAM,KAAAkF,MAAAnD,kBAAA,SAAAoD,GAAA,GAAAnF,KAAAyB,KAAA,MAAA0D,EAAA,IAAA9F,EAAAW,KAAA,SAAAoF,EAAAC,EAAAC,GAAA,OAAArE,EAAAlE,KAAA,QAAAkE,EAAAvB,IAAAyF,EAAA9F,EAAAkD,KAAA8C,EAAAC,IAAAjG,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAwC,KAAAoD,EAAA,QAAA7B,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAAxC,EAAA0B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA5C,KAAA6E,KAAA,KAAAU,EAAA9H,EAAAkC,KAAAgD,EAAA,YAAA6C,EAAA/H,EAAAkC,KAAAgD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAxF,KAAA6E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA7C,KAAA6E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAvF,KAAA6E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAhE,MAAA,6CAAAxB,KAAA6E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAd,OAAA,SAAAjF,EAAA2C,GAAA,QAAA+D,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAC,QAAA5C,KAAA6E,MAAApH,EAAAkC,KAAAgD,EAAA,eAAA3C,KAAA6E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAA1I,GAAA,aAAAA,IAAA0I,EAAA7C,QAAAlD,MAAA+F,EAAA3C,aAAA2C,EAAA,UAAAxE,EAAAwE,IAAAtC,WAAA,UAAAlC,EAAAlE,OAAAkE,EAAAvB,MAAA+F,GAAAzF,KAAAQ,OAAA,OAAAR,KAAAuC,KAAAkD,EAAA3C,WAAAlD,GAAAI,KAAA0F,SAAAzE,IAAAyE,SAAA,SAAAzE,EAAA8B,GAAA,aAAA9B,EAAAlE,KAAA,MAAAkE,EAAAvB,IAAA,gBAAAuB,EAAAlE,MAAA,aAAAkE,EAAAlE,KAAAiD,KAAAuC,KAAAtB,EAAAvB,IAAA,WAAAuB,EAAAlE,MAAAiD,KAAAkF,KAAAlF,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAuC,KAAA,kBAAAtB,EAAAlE,MAAAgG,IAAA/C,KAAAuC,KAAAQ,GAAAnD,GAAA+F,OAAA,SAAA7C,GAAA,QAAAW,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA9C,KAAA0F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA/C,IAAAgG,MAAA,SAAAhD,GAAA,QAAAa,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA3B,EAAA0B,EAAAQ,WAAA,aAAAlC,EAAAlE,KAAA,KAAA8I,EAAA5E,EAAAvB,IAAAwD,EAAAP,GAAA,OAAAkD,GAAA,UAAArE,MAAA,0BAAAsE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAxC,KAAA0B,SAAA,CAAAxD,SAAAkC,EAAAiD,GAAAf,aAAAE,WAAA,SAAAxC,KAAAQ,SAAAR,KAAAN,SAAAwC,GAAAtC,IAAAvC,EAEA,IAiDe0I,EAjDe,SAAD7J,GAAW,IAAR8J,EAAI9J,EAAJ8J,KAAI5J,EACEC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA1C6J,EAAW3J,EAAA,GAAC4J,EAAc5J,EAAA,GAGhC6J,oBAAU,WACNC,EAAaJ,IACf,CAACA,IAEH,IAAMI,EAAY,eAAAC,EAAAC,YAAAlJ,IAAA4G,KAAC,SAAAuC,EAAMP,GAAI,IAAAQ,EAAAC,EAAA,OAAArJ,IAAAwB,KAAA,SAAA8H,GAAA,cAAAA,EAAA7B,KAAA6B,EAAAnE,MAAA,cAAAmE,EAAA7B,KAAA,EAAA6B,EAAAnE,KAAA,EAEAoE,MAAK,qDAAAC,OAC+BZ,EAAI,WAAAY,OATxD,mCASwE,kBAC5E,OAFa,KAARJ,EAAQE,EAAA7E,MAGFgF,GAAE,CAAAH,EAAAnE,KAAA,gBAAAmE,EAAAnE,KAAA,EACOiE,EAASM,OAAM,OAA1BL,EAAIC,EAAA7E,KACVqE,EAAeO,GAAKC,EAAAnE,KAAA,iBAEpBwE,QAAQzF,MAAM,6CAA4C,QAAAoF,EAAAnE,KAAA,iBAAAmE,EAAA7B,KAAA,GAAA6B,EAAAM,GAAAN,EAAA,SAK9DK,QAAQzF,MAAM,uBAAsBoF,EAAAM,IAAQ,yBAAAN,EAAA1B,SAAAuB,EAAA,kBAInD,gBAlBiBU,GAAA,OAAAZ,EAAAa,MAAAlH,KAAAmH,YAAA,GAmBlB,OACIzK,IAAAC,cAAA,WACKsJ,EACGvJ,IAAAC,cAAA,WACMD,IAAAC,cAAA,UAAI,cAAYqJ,GACdtJ,IAAAC,cAAA,SAAG,gBAAcsJ,EAAYmB,KAAKC,KAAK,SACvC3K,IAAAC,cAAA,SAAG,YAAUsJ,EAAYqB,QAAQ,GAAGC,cAK/C,0CCjBEC,EAhBQ,WAAI,IAAApL,EACFC,mBAAS,UAASC,EAAAC,YAAAH,EAAA,GAAhC4J,EAAI1J,EAAA,GAACmL,EAAOnL,EAAA,GAKnB,OACII,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,6BACJD,IAAAC,cAACV,EAAS,CAACE,aANI,SAACuL,GACpBD,EAAQC,MAMJhL,IAAAC,cAACoJ,EAAuB,CAACC,KAAMA,aCe5B2B,MA/Bf,SAAiBzL,GACjB,IADmB0L,EAAO1L,EAAP0L,QAAOxL,EAGFC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA1ByL,EAAIvL,EAAA,GAACwL,EAAOxL,EAAA,GAYlB,OACII,IAAAC,cAAA,QAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAEiB,KAAhB+K,EAAKE,SAEJH,EAAQC,GACRC,EAAQ,OAMRpL,IAAAC,cAAA,SACAI,KAAK,OACLC,MAAO6K,EACP3K,SAAU,SAACL,GAAC,OAAGiL,EAAQjL,EAAEM,OAAOH,QAChCC,YAAY,yBAGV,IAACP,IAAAC,cAAA,WACHD,IAAAC,cAAA,UAAQI,KAAK,UAAS,gBCUnBiL,MAjCf,SAAiB9L,GACjB,IADmB+L,EAAK/L,EAAL+L,MAAMC,EAAUhM,EAAVgM,WAIrB,OAFAnB,QAAQoB,IAAI,sBAAsBF,GAG/BvL,IAAAC,cAAAD,IAAA0L,SAAA,KACA1L,IAAAC,cAAA,SAAG,6BACFD,IAAAC,cAAA,MAAI0L,UAAU,aACbJ,EAAMK,IAAI,SAACT,EAAMU,GAAK,OACvB7L,IAAAC,cAAA,MAAIkB,IAAK0K,GACNV,EACDnL,IAAAC,cAAA,UAAQ0L,UAAU,cAAcG,QAAS,kBAAMN,EAAWK,KAAQ,gBCc7DE,MAvBf,WACA,IAAArM,EAC2BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA5B6L,EAAK3L,EAAA,GAACoM,EAAQpM,EAAA,GAYrB,OACII,IAAAC,cAAA,OAAK0L,UAAU,YACX3L,IAAAC,cAAA,UAAI,6BACJD,IAAAC,cAACgL,EAAQ,CAACC,QAbJ,SAACC,GAEXa,EAAQ,GAAA9B,OAAA+B,YAAKV,GAAK,CAACJ,QAYfnL,IAAAC,cAACqL,EAAQ,CAACC,MAAOA,EAAOC,WATf,SAACK,GACd,IAAMK,EAAaX,EAAMY,OAAO,SAACC,EAAErF,GAAC,OAAGA,IAAK8E,IAC5CG,EAASE,uBC4JFG,EAzKJ,WACX,IAAA3M,EACkCC,mBAAS,CACnC2M,GAAG,GACHC,UAAU,GACVC,cAAc,GACdC,YAAY,GACZC,WAAW,GACXC,UAAU,GACVC,YAAY,WACZC,cAAc,GACdC,eAAc,IAGhBlN,EAAAC,YAAAH,EAAA,GAZKqN,EAAQnN,EAAA,GAACoN,EAAWpN,EAAA,GAAAqN,EAcJtN,mBAAS,IAAGuN,EAAArN,YAAAoN,EAAA,GAA5BE,EAAKD,EAAA,GAACE,EAAQF,EAAA,GAUfG,EAAa,SAACC,GAAQ,IAAAC,EACOD,EAAM7M,OAA/B4G,EAAIkG,EAAJlG,KAAK/G,EAAKiN,EAALjN,MAAMD,EAAIkN,EAAJlN,KAAKmN,EAAOD,EAAPC,QACtBR,EAAY,SAACS,GAAQ,OAAAC,YAAA,GAAQD,EAAQE,YAAA,GACpCtG,EAAc,aAARhH,EAAoBmN,EAASlN,OA+DzC,OACCN,IAAAC,cAAAD,IAAA0L,SAAA,KACA1L,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,gCACJD,IAAAC,cAAA,UAAI,+BACJD,IAAAC,cAAA,QAAMC,SAzDS,SAACoN,GAEhB,GADAA,EAAMlN,iBACH2M,EAAST,GACZ,CAMI,IAAMsB,EAAaT,EAAMvB,IAAI,SAACiC,GAC1B,OAAGA,EAAKvB,KAAOS,EAAST,GACbS,EAEJc,IAEXT,EAASQ,QAMTR,EAAQ,GAAAlD,OAAA+B,YAAKkB,GAAK,CAAAO,YAAA,GAAOX,EAAQ,CAAET,GAAIwB,KAAKC,WAGhDf,EAAY,CAGRV,GAAI,GACJC,UAAW,GACXC,cAAe,GACfC,YAAa,GACbC,WAAY,GACZC,UAAW,GACXC,YAAa,UACbC,cAAe,GACfC,eAAe,KAsBWkB,MAAM,QAIhChO,IAAAC,cAAA,OAAK+N,MAAM,cACThO,IAAAC,cAAA,SAAOI,KAAK,OAAO2N,MAAM,eAAe3G,KAAK,YAAY/G,MAAOyM,EAASR,UAAW/L,SAAU6M,EAAc9M,YAAY,uBAI1HP,IAAAC,cAAA,OAAK+N,MAAM,cACThO,IAAAC,cAAA,SAAOI,KAAK,WAAW2N,MAAM,eAAe3G,KAAK,gBACjD/G,MAAOyM,EAASP,cAAehM,SAAU6M,EAAc9M,YAAY,yBAGrEP,IAAAC,cAAA,OAAK+N,MAAM,cACThO,IAAAC,cAAA,SAAOI,KAAK,SAAS2N,MAAM,eAAe3G,KAAK,cAC/C/G,MAAOyM,EAASN,YAAajM,SAAU6M,EAAc9M,YAAY,wBAGnEP,IAAAC,cAAA,OAAK+N,MAAM,cACThO,IAAAC,cAAA,SAAOI,KAAK,QAAQ2N,MAAM,eAAe3G,KAAK,aAC9C/G,MAAOyM,EAASL,WAAYlM,SAAU6M,EAAc9M,YAAY,sBAGlEP,IAAAC,cAAA,OAAK+N,MAAM,cACThO,IAAAC,cAAA,SAAOI,KAAK,OAAO2N,MAAM,eAAe3G,KAAK,YAC7C/G,MAAOyM,EAASJ,UAAWnM,SAAU6M,EAAc9M,YAAY,+BAGlEP,IAAAC,cAAA,OAAK+N,MAAM,cACVhO,IAAAC,cAAA,SAAOgO,KAAK,cAAa,gDAAoD,IAACjO,IAAAC,cAAA,WAC1ED,IAAAC,cAAA,UAAQoH,KAAK,cAAc2G,MAAM,eAAe1N,MAAOyM,EAASH,YAAapM,SAAU6M,GACnFrN,IAAAC,cAAA,UAAQK,MAAM,OAAO4N,UAAQ,GAAC,SAC9BlO,IAAAC,cAAA,UAAQK,MAAM,QAAO,SACrBN,IAAAC,cAAA,UAAQK,MAAM,QAAO,SACrBN,IAAAC,cAAA,UAAQK,MAAM,QAAO,SACrBN,IAAAC,cAAA,UAAQK,MAAM,QAAO,SACrBN,IAAAC,cAAA,UAAQK,MAAM,QAAO,SACrBN,IAAAC,cAAA,UAAQK,MAAM,QAAO,WAI9BN,IAAAC,cAAA,OAAK+N,MAAM,cACVhO,IAAAC,cAAA,SAAO+N,MAAM,cAAa,uBAA2B,IAAChO,IAAAC,cAAA,WACtDD,IAAAC,cAAA,SAAOI,KAAK,WAAW2N,MAAM,mBAAmB3G,KAAK,gBAAgBmG,QAAST,EAASD,cAAetM,SAAU6M,KAGjHrN,IAAAC,cAAA,OAAK+N,MAAM,cACVhO,IAAAC,cAAA,YAAUkO,KAAK,IAAIC,KAAK,IAAIJ,MAAM,eAAe3G,KAAK,gBAAe/G,MAAOyM,EAASF,cAAerM,SAAU6M,EAAc9M,YAAY,oBAIzIP,IAAAC,cAAA,UAAQI,KAAK,UAAS,IAAE0M,EAAST,GAAK,SAAW,SAAU,MAE9DtM,IAAAC,cAAA,UACCkN,EAAMvB,IAAI,SAACiC,GAAI,OACR7N,IAAAC,cAAA,MAAIkB,IAAK0M,EAAKvB,IACRuB,EAAKtB,UACPvM,IAAAC,cAAA,UAAQ6L,QAAS,kBA1EhB,SAACQ,GACd,IAAM+B,EAAalB,EAAMmB,KAAK,SAACT,GAAI,OAAGA,EAAKvB,KAAMA,IACjDU,EAAYqB,GAwEqBE,CAAWV,EAAKvB,MAAK,UAC1CtM,IAAAC,cAAA,UAAQ6L,QAAS,kBAtEd,SAACQ,GAChB,IAAMkC,EAAcrB,EAAMhB,OAAO,SAAC0B,GAAI,OAAGA,EAAKvB,KAAMA,IACpDc,EAASoB,GAoEwBC,CAAaZ,EAAKvB,KAAK0B,MAAM,OAAM,kBC5JtEU,EAAQ,CACVrH,KAAK,eACLsH,MAAM,mCACNC,UAAU,IAwBCC,MArBf,WAEI,OACI7O,IAAAC,cAAAD,IAAA0L,SAAA,KACA1L,IAAAC,cAAA,UAAI,+BACJD,IAAAC,cAAA,UAAI,IAAGyO,EAAQrH,KAAM,KACrBrH,IAAAC,cAAA,OACA0L,UAAU,SACVmD,IAAKJ,EAAQC,MACbI,IAAK,cAAgBL,EAAQrH,KAC7B2H,MAAO,CACHC,MAAMP,EAAQE,UACdM,OAAOR,EAAQE,eClB3B,SAASO,EAAM3P,GAIf,IAJiBc,EAAKd,EAALc,MAAM8O,EAAa5P,EAAb4P,cAMnB,OACIpP,IAAAC,cAAA,UAAQ0L,UAAU,SAASG,QAASsD,GAAe,IAAE9O,EAAM,KA2FnE,SAAS+O,EAAOC,GAaZ,IAXA,IAAMC,EAAM,CACT,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGCxI,EAAE,EAAGA,EAAEwI,EAAMzI,OAAOC,IAC7B,KAAAyI,EAAA3P,YACkB0P,EAAMxI,GAAE,GAAf0I,EAACD,EAAA,GAACE,EAACF,EAAA,GAACG,EAACH,EAAA,GAEZ,GAAGF,EAAQG,IAAMH,EAAQG,KAAOH,EAAQI,IAAMJ,EAAQG,KAAOH,EAAQK,GAEjE,OAAOL,EAAQG,GAKvB,OAAO,KAMIG,MAjHf,WAEI,IAAAlQ,EAC8BC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAArCmQ,EAAOjQ,EAAA,GAAEkQ,EAAUlQ,EAAA,GAC1BqN,EAC2BtN,mBAASoQ,MAAM,GAAGC,KAAK,OAAM9C,EAAArN,YAAAoN,EAAA,GAAjDqC,EAAOpC,EAAA,GAAC+C,EAAU/C,EAAA,GAIzB,SAASgD,EAAYnJ,GAKjB,IAAGuI,EAAQvI,KAAMsI,EAAOC,GAAxB,CAGA,IAAMa,EAAcb,EAAQjH,QAGzBwH,GAECM,EAAYpJ,GAAI,IAChB+I,GAAYD,IAMZM,EAAYpJ,GAAG,IAGnBkJ,EAAWE,GACXL,GAAYD,IAGhB,IACIO,EADEC,EAAOhB,EAAOC,GAgBpB,OAZIc,EAFDC,EAEQ,eAAiBA,EAKjB,qBAAuBR,EAAU,IAAI,KAQ5C7P,IAAAC,cAAAD,IAAA0L,SAAA,KACA1L,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,SAAG,IAACD,IAAAC,cAAA,SAAG,wBAAwB,IAACD,IAAAC,cAAA,WAAK,IAAEmQ,EAAO,KAC1CpQ,IAAAC,cAAA,OAAK0L,UAAU,aAMX3L,IAAAC,cAACkP,EAAM,CAAC7O,MAAOgP,EAAQ,GAAIF,cAAe,kBAAIc,EAAY,MAAM,IAChElQ,IAAAC,cAACkP,EAAM,CAAC7O,MAAOgP,EAAQ,GAAIF,cAAe,kBAAIc,EAAY,MAC1DlQ,IAAAC,cAACkP,EAAM,CAAC7O,MAAOgP,EAAQ,GAAIF,cAAe,kBAAIc,EAAY,OAG5DlQ,IAAAC,cAAA,OAAK0L,UAAU,aACf3L,IAAAC,cAACkP,EAAM,CAAC7O,MAAOgP,EAAQ,GAAIF,cAAe,kBAAIc,EAAY,MAAO,IACjElQ,IAAAC,cAACkP,EAAM,CAAC7O,MAAOgP,EAAQ,GAAIF,cAAe,kBAAIc,EAAY,MAC1DlQ,IAAAC,cAACkP,EAAM,CAAC7O,MAAOgP,EAAQ,GAAIF,cAAe,kBAAIc,EAAY,OAG1DlQ,IAAAC,cAAA,OAAK0L,UAAU,aACf3L,IAAAC,cAACkP,EAAM,CAAC7O,MAAOgP,EAAQ,GAAIF,cAAe,kBAAIc,EAAY,MAC1DlQ,IAAAC,cAACkP,EAAM,CAAC7O,MAAOgP,EAAQ,GAAIF,cAAe,kBAAIc,EAAY,MAC1DlQ,IAAAC,cAACkP,EAAM,CAAC7O,MAAOgP,EAAQ,GAAIF,cAAe,kBAAIc,EAAY,SCpEzDI,MAxBf,WAAsB,IAAA5Q,EACKC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA3BY,EAAKV,EAAA,GAAC2Q,EAAQ3Q,EAAA,GAAAqN,EACKtN,mBAAS,IAAGuN,EAAArN,YAAAoN,EAAA,GAAxBuD,GAADtD,EAAA,GAAWA,EAAA,IAYxB,OATAzD,oBAAU,WACN+G,EAAWlQ,EAAM,IAAI,EAAE,cAAc,eAEvC,CAACA,IAOCN,IAAAC,cAAAD,IAAA0L,SAAA,KACA1L,IAAAC,cAAA,UAAI,2BACJD,IAAAC,cAAA,SAAG,eACHD,IAAAC,cAAA,UAAQ6L,QARI,WACZyE,EAASjQ,EAAM,KAOa,kBClB9BmQ,EAAY,SAADjR,GAAoB,IAAjBkR,EAAalR,EAAbkR,cAAmBhR,EACRC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAhCiR,EAAO/Q,EAAA,GAACgR,EAAUhR,EAAA,GAAAqN,EACFtN,mBAAS,IAAGuN,EAAArN,YAAAoN,EAAA,GAA5B4D,EAAK3D,EAAA,GAAC4D,EAAQ5D,EAAA,GAYrB,OACIlN,IAAAC,cAAAD,IAAA0L,SAAA,KACI1L,IAAAC,cAAA,QAAMC,SAZK,SAACC,GAChBA,EAAEC,iBACFsQ,EAAc,CAACC,UAAQE,UACvBD,EAAW,IACXE,EAAS,MASD9Q,IAAAC,cAAA,SAAOI,KAAK,OACZE,YAAY,kBACZD,MAAOqQ,EACPnQ,SAAU,SAACL,GAAC,OAAGyQ,EAAWzQ,EAAEM,OAAOH,UAEnCN,IAAAC,cAAA,SAAOI,KAAK,OACZE,YAAY,QACZD,MAAOuQ,EACPrQ,SAAU,SAACL,GAAC,OAAG2Q,EAAS3Q,EAAEM,OAAOH,UAGjCN,IAAAC,cAAA,UAAQI,KAAK,UAAS,uBAOzB0Q,EAAe,SAADpH,GAAa,IAAVqH,EAAMrH,EAANqH,OAE1B,OACIhR,IAAAC,cAAA,OAAK0L,UAAU,WACX3L,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,UACK+Q,EAAOpF,IAAI,SAACiF,EAAMhF,GAAK,OACxB7L,IAAAC,cAAA,MAAIkB,IAAK0K,GACJgF,EAAMF,QAAQ,KAAGE,EAAMA,YAmC7BI,MAzBf,WAAgB,IAAAC,EACYvR,mBAAS,IAAGwR,EAAAtR,YAAAqR,EAAA,GAA9BF,EAAMG,EAAA,GAACC,EAASD,EAAA,GAKtB,OACInR,IAAAC,cAAAD,IAAA0L,SAAA,KACC1L,IAAAC,cAACwQ,EAAW,CAACC,cALM,WACpBU,EAAS,GAAAlH,OAAA+B,YAAK+E,GAAM,CAACA,QAM5BA,EAAOlK,OAAO,GAEX9G,IAAAC,cAAC8Q,EAAc,CAACC,OAAQA,uBCpDbK,EAPO,SAAD7R,GAAwB,IAArB8R,EAAQ9R,EAAR8R,SAASC,EAAQ/R,EAAR+R,SACvBC,EAAWC,SAASC,eAAeJ,GACzC,OAAOE,EAAYG,IAASC,aAAaL,EAASC,GAAa,MCR7DK,EAAU,CACZ,CACAC,SAAS,mCACTC,QAAQ,CAAC,QAAQ,QAAQ,QAAQ,iBACjCC,cAAc,SAGd,CACAF,SAAS,kCACTC,QAAQ,CAAC,WAAW,SAAS,YAAY,YACzCC,cAAc,YAId,CACAF,SAAS,kCACTC,QAAQ,CAAC,QAAQ,SAAS,QAAQ,UAClCC,cAAc,UAId,CACAF,SAAS,qCACTC,QAAQ,CAAC,QAAQ,SAAS,SAAS,UACnCC,cAAc,WA2DHC,MAnDf,WACA,IAAAvS,EAC+CC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA/CwS,EAAetS,EAAA,GAACuS,EAAkBvS,EAAA,GAAAqN,EAClBtN,mBAAS,GAAEuN,EAAArN,YAAAoN,EAAA,GAA3BmF,EAAKlF,EAAA,GAACmF,EAAQnF,EAAA,GAAAgE,EACUvR,oBAAS,GAAMwR,EAAAtR,YAAAqR,EAAA,GAAvCoB,EAASnB,EAAA,GAACoB,EAAYpB,EAAA,GAe7B,OAEInR,IAAAC,cAAA,OAAK0L,UAAU,kBACX3L,IAAAC,cAAA,UAAI,6BACHqS,EACDtS,IAAAC,cAAA,OAAK0L,UAAU,iBAAgB,cACfyG,EAAM,WAASP,EAAU/K,QAKrC9G,IAAAC,cAAAD,IAAA0L,SAAA,KACA1L,IAAAC,cAAA,OAAK0L,UAAU,oBACX3L,IAAAC,cAAA,OAAK0L,UAAU,kBACX3L,IAAAC,cAAA,YAAM,aAAWiS,EAAiB,EAAE,KAAQ,KAAGL,EAAU/K,QAE7D9G,IAAAC,cAAA,OAAK0L,UAAU,iBACVkG,EAAUK,GAAiBJ,WAIpC9R,IAAAC,cAAA,OAAK0L,UAAU,kBACVkG,EAAUK,GAAiBH,QAAQnG,IAAI,SAAC4G,GAAM,OAAIxS,IAAAC,cAAA,UAAQkB,IAAKqR,EAAQ1G,QAAS,kBAnCzE,SAAC2G,GAClBA,IAAkBZ,EAAUK,GAAiBF,eAC5CK,EAASD,EAAM,GAGnB,IAAMM,EAAaR,EAAiB,EACjCQ,EAAcb,EAAU/K,OACvBqL,EAAmBO,GAEnBH,GAAa,GA0BgFI,CAAkBH,KAAS,IAAEA,EAAO,WCb9HI,MArCf,WACE,OACE5S,IAAAC,cAAAD,IAAA0L,SAAA,KAEA1L,IAAAC,cAAA,OAAK0L,UAAU,OACb3L,IAAAC,cAAA,UAAQ0L,UAAU,cAChB3L,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,uBAEPD,IAAAC,cAAA,UAAI,uCACJD,IAAAC,cAAC4O,EAAO,MACR7O,IAAAC,cAAA,WACAD,IAAAC,cAACqQ,EAAW,MACZtQ,IAAAC,cAAA,WACCD,IAAAC,cAAC6K,EAAgB,MACjB9K,IAAAC,cAAA,WACAD,IAAAC,cAAC8L,EAAO,MACR/L,IAAAC,cAAA,WACAD,IAAAC,cAACoM,EAAI,MACLrM,IAAAC,cAAA,WACAD,IAAAC,cAAC2P,EAAK,MAEN5P,IAAAC,cAAA,WACAD,IAAAC,cAACoR,EAAe,CAACC,SAAS,wBACxBtR,IAAAC,cAAC8Q,EAAc,OAEjB/Q,IAAAC,cAAA,WACAD,IAAAC,cAACgS,EAAI,wBChCEY,EAjBH,WAOR,OACI7S,IAAAC,cAAAD,IAAA0L,SAAA,KACI1L,IAAAC,cAAA,MAAI+O,MAPG,CACX8D,MAAM,OACNC,SAAS,OACTC,cAAc,QAIY,2BACtBhT,IAAAC,cAAA,8BCMGgT,EAhBD,WAEV,OACIjT,IAAAC,cAAAD,IAAA0L,SAAA,KACA1L,IAAAC,cAAA,WACAD,IAAAC,cAAA,MAAI+O,MAAOkE,IAAOC,IAAI,iCACtBnT,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAG,qCAAkCD,IAAAC,cAAA,KAAGmT,KAAK,sCAAsC3S,OAAO,SAAS4S,IAAI,uBAAsB,yBCAtHC,EAPJ,WAEP,OACItT,IAAAC,cAAA,UAAI,+BCsBGsT,EAzBF,WACT,OACIvT,IAAAC,cAAAD,IAAA0L,SAAA,KACA1L,IAAAC,cAAA,WACID,IAAAC,cAAA,UACID,IAAAC,cAAA,UACID,IAAAC,cAACuT,IAAI,CAACC,GAAG,KAAI,WAEjBzT,IAAAC,cAAA,UACID,IAAAC,cAACuT,IAAI,CAACC,GAAG,WAAU,aAEvBzT,IAAAC,cAAA,UACID,IAAAC,cAACuT,IAAI,CAACC,GAAG,OAAM,mBAEnBzT,IAAAC,cAAA,UACID,IAAAC,cAACuT,IAAI,CAACC,GAAG,SAAQ,cAI7BzT,IAAAC,cAACyT,IAAM,QCZAC,EANA,WACX,OACI3T,IAAAC,cAAA,MAAI+O,MAAO,CAAE8D,MAAM,YAAY,8BCW1BnB,IAASiC,WAAWnC,SAASC,eAAe,SACpDmC,OACH7T,IAAAC,cAACD,IAAM8T,WAAU,KACf9T,IAAAC,cAAC8T,IAAa,KAER/T,IAAAC,cAAC+T,IAAM,KACLhU,IAAAC,cAACgU,IAAK,CAACC,KAAK,IAAIC,QAASnU,IAAAC,cAACsT,EAAM,OAC9BvT,IAAAC,cAACgU,IAAK,CAACpI,OAAK,EAACsI,QAASnU,IAAAC,cAACqT,EAAI,QAC3BtT,IAAAC,cAACgU,IAAK,CAACC,KAAK,UAAUC,QAASnU,IAAAC,cAACgT,EAAO,QACvCjT,IAAAC,cAACgU,IAAK,CAACC,KAAK,MAAMC,QAASnU,IAAAC,cAAC2S,EAAG,QAC/B5S,IAAAC,cAACgU,IAAK,CAACC,KAAK,QAAQC,QAASnU,IAAAC,cAAC4S,EAAK,QACnC7S,IAAAC,cAACgU,IAAK,CAACC,KAAK,IAAIC,QAASnU,IAAAC,cAAC0T,EAAQ","file":"static/js/main.2403a973.chunk.js","sourcesContent":["import React , {useState} from 'react'\r\n\r\n\r\n\r\nconst SearchBar=({onCityChange})=>{\r\n\r\n    const [inputCity,setinputCity]=useState(\"\");\r\n\r\n    const handleInputChange=(e)=>{\r\n        setinputCity(e.target.value) //The main essence of this is to help update the inputcity value \r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n\r\n        e.preventDefault()\r\n        onCityChange(inputCity) //This does final supply of the updated input city to the outside component\r\n\r\n    }\r\n    return(\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\"\r\n                value={inputCity}\r\n                placeholder=\"Enter the Name of the city \"\r\n                onChange={handleInputChange}\r\n                /> <br/>\r\n                <button type=\"submit\"> Search </button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchBar","import React ,{useState, useEffect} from 'react'\r\n\r\n\r\nconst WeatherDisplayComponent=({city})=>{\r\n    const[weatherData,setweatherData]=useState(null)\r\n    const apiKey=\"cafd4cb652f41096c0e782eeb8f84428\"\r\n\r\n    useEffect(()=>{\r\n        fetchWeather(city)\r\n    },[city])\r\n\r\n    const fetchWeather=async(city)=>{\r\n        try{\r\n            const response=await fetch(\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\r\n            );\r\n            if(response.ok){\r\n                const data=await response.json();\r\n                setweatherData(data)\r\n            }else{\r\n                console.error(\"Ooops!! There was an error in connection \")\r\n\r\n            }\r\n\r\n        }catch(error){\r\n            console.error(\"Error fetching data \",error )\r\n\r\n        }\r\n\r\n    }\r\n    return(\r\n        <div>\r\n            {weatherData ? (\r\n                <div>\r\n                      <h4>Weather in {city}</h4>\r\n                        <p>Temperature: {weatherData.main.temp}°C</p>\r\n                        <p>Weather: {weatherData.weather[0].description}</p>\r\n                </div>\r\n               \r\n\r\n            ): \r\n            (\"Sorry, no weather data available now \")}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default WeatherDisplayComponent\r\n\r\n\r\n\r\n\r\n\r\n/**  const WeatherDisplay=({weather})=>{\r\n    return(\r\n        <div>\r\n           {weather ? //This uses a ternary operator to do something based on if weather is set or not \r\n            (\r\n            <div>\r\n                <h3> Weather in {weather.name} </h3>\r\n                <hr/>\r\n               \r\n                 <p> Temperature is {weather.main.temp} Celsius</p>\r\n                 <p> Description : {weather.weather[0].description} </p>\r\n                 <p> Visibility : {weather.visibility} </p>\r\n                \r\n               \r\n                \r\n             </div>\r\n             ) \r\n             : (<p> Ooops!!! No weather data available </p>)}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n*/\r\n","import React , { useState } from 'react'\r\n\r\nimport SearchBar from './WeatherSearchBar.js'\r\nimport WeatherDisplayComponent from './WeatherDisplay.js'\r\n\r\n\r\n//Collect your API Key\r\n\r\nconst WeatherComponent=()=>{\r\n    const [city,setCity]=useState(\"Ibadan\") //Default City \r\n\r\n    const handleCityChange=(newCity)=>{\r\n        setCity(newCity)\r\n    }\r\n    return (\r\n        <div>\r\n            <h3> (2) Weather Application </h3>\r\n            <SearchBar onCityChange={handleCityChange} />\r\n            <WeatherDisplayComponent city={city} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherComponent ","import React, { useState } from 'react'\r\n\r\nfunction TodoForm({addTask})  // The {addTask} is a props passed all the way from Todo App.js\r\n{\r\n\r\n    const[task,setTask]=useState(\"\")\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n\r\n        if(task.trim() !== \"\")\r\n        {\r\n            addTask(task)\r\n            setTask(\"\")\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={task}\r\n            onChange={(e)=>setTask(e.target.value)}\r\n            placeholder=\"Enter a New Task... \"\r\n\r\n\r\n            /> <br/>\r\n            <button type=\"submit\"> Add Task </button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm ","import React from 'react'\r\n\r\n\r\n\r\nfunction TodoList({tasks,deleteTask}) //{ tasks, deleteTask} are props passed from TodoApp\r\n{\r\n    console.log(\"Tasks in the list: \",tasks)\r\n    \r\n    return(\r\n       <>\r\n       <p> Here are the Lists..... </p>\r\n        <ul className=\"todo-list\">\r\n        {tasks.map((task, index) => (\r\n        <li key={index}>\r\n          {task}\r\n          <button className=\"buttonclick\" onClick={() => deleteTask(index)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    \r\n      {/*}\r\n            {\r\n                tasks.map((task,index)=>{\r\n                    \r\n                    <TodoItem key={index} task={task} index={index} deleteTask={deleteTask} />\r\n                    \r\n\r\n                })\r\n            }\r\n            */}\r\n\r\n        </ul>\r\n        </>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default TodoList","import React, { useState } from 'react'\r\n\r\nimport TodoForm from './TodoForm.js'\r\nimport TodoList from './TodoList.js'\r\n\r\n\r\nfunction TodoApp()\r\n{\r\n    const [tasks,setTasks]=useState([])\r\n\r\n    const addTask=(task)=>\r\n    {\r\n        setTasks([...tasks,task])\r\n    }\r\n\r\n    const deleteTask=(index)=>{\r\n        const updatedTasks=tasks.filter((_,i)=>i !==index )\r\n        setTasks(updatedTasks)\r\n    }\r\n\r\n    return(\r\n        <div className=\"todo-app\">\r\n            <h3> (3) Quick Todo List App </h3>\r\n            <TodoForm addTask={addTask} />\r\n            <TodoList tasks={tasks} deleteTask={deleteTask} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoApp ","import React , { useState } from 'react'\r\n\r\n//This is a Simple Crud Application that attempts to show how to handle all html form fields in React \r\n\r\nconst Form=()=>\r\n{\r\n    const [formData,setFormData] =useState({\r\n        id:\"\",\r\n        textInput:\"\",\r\n        passwordInput:\"\",\r\n        numberInput:\"\",\r\n        emailInput:\"\",\r\n        dateInput:\"\",\r\n        selectInput:\"Option 1\",\r\n        textareaInput:\"\",\r\n        checkboxInput:false // This is like a default option \r\n        \r\n\r\n    })\r\n\r\n    const [items,setItems]=useState([]); //This will store the details in form of a list\r\n\r\n\r\n    /**\r\n     * [name]: type === 'checkbox' ? checked : value,: This is where the magic happens. It updates the specific property in the new form data object based on user input.\r\n\r\ntype === 'checkbox' ? checked : value, is a ternary operator. It's like asking a question: \"Is the input field a checkbox?\"\r\nIf the input field is a checkbox, the condition type === 'checkbox' is true, so it assigns the checked value to the property. \r\nThis is because for checkboxes, checked is either true (checked) or false (not checked).\r\n     */\r\n    const handleChange=(event)=>{\r\n        const{name,value,type,checked}=event.target\r\n        setFormData((prevData)=>({...prevData, \r\n        [name]:type ==='checkbox' ?checked :value, }))\r\n        /**setFormData((prevData) => { ... }): This uses the setFormData function provided by React to update the form data \r\n        state. The function argument prevData represents the current state of the form data.\r\n\r\n        { ...prevData }: This spread operator ... creates\r\n         a new object by copying all properties from the existing form data. \r\n         This ensures that any other properties that are not being updated remain the same. */\r\n\r\n    }\r\n\r\n\r\n    const handleSubmit=(event)=>{\r\n        event.preventDefault()\r\n        if(formData.id)\r\n        {\r\n            /**\r\n             *  If formData.id exists, it means we are in update mode else in create mode \r\n             * *You know formid is automatically set only when the form is being created \r\n            // Handle update logic here,\r\n             */\r\n            const updatedItems=items.map((item)=>{\r\n                if(item.id === formData.id){\r\n                    return formData;\r\n                }\r\n                return item;\r\n            });\r\n            setItems(updatedItems); //Updates the item here \r\n\r\n\r\n        }else{\r\n            //It means we are creating the form the first time and setting the id automatically using Date.now()\r\n            //This is using the spread operator \r\n            setItems([...items, { ...formData, id: Date.now() }]);\r\n        }\r\n\r\n        setFormData({\r\n\r\n            //This resets the form data after submission\r\n            id: '',\r\n            textInput: '',\r\n            passwordInput: '',\r\n            numberInput: '',\r\n            emailInput: '',\r\n            dateInput: '',\r\n            selectInput: 'option1',\r\n            textareaInput: '',\r\n            checkboxInput: false,\r\n          });\r\n\r\n       \r\n    }\r\n\r\n    const handleEdit=(id)=>{\r\n        const selectedItem=items.find((item)=>item.id ===id)\r\n        setFormData(selectedItem)\r\n\r\n    }\r\n    const handleDelete=(id)=>{\r\n        const filteredItems=items.filter((item)=>item.id !==id )\r\n        setItems(filteredItems)\r\n    }\r\n\r\n\r\n   return(\r\n    <>\r\n    <div>\r\n        <h3> (4) A Simple Crud Form App </h3>\r\n        <h5> Fill in Details Below ... </h5>\r\n        <form onSubmit={handleSubmit} class=\"form\">\r\n            \r\n            {/*  Names field */}\r\n        \r\n            <div class=\"form-group\">\r\n              <input type=\"text\" class=\"form-control\" name=\"textInput\" value={formData.textInput} onChange={handleChange} placeholder=\"Enter your Names \"/>\r\n\r\n            </div>\r\n              {/*  Password field */}\r\n            <div class=\"form-group\">\r\n              <input type=\"password\" class=\"form-control\" name=\"passwordInput\" \r\n              value={formData.passwordInput} onChange={handleChange} placeholder=\"Enter your Password\"/> \r\n            </div>\r\n              {/*  Number or Contact Field */}\r\n            <div class=\"form-group\">\r\n              <input type=\"number\" class=\"form-control\" name=\"numberInput\" \r\n              value={formData.numberInput} onChange={handleChange} placeholder=\"Enter your Contact\"/> \r\n            </div>\r\n              {/*  Email Field  */}\r\n            <div class=\"form-group\">\r\n              <input type=\"email\" class=\"form-control\" name=\"emailInput\" \r\n              value={formData.emailInput} onChange={handleChange} placeholder=\"Enter your Email\"/> \r\n            </div>\r\n              {/* Date Field */}\r\n            <div class=\"form-group\">\r\n              <input type=\"date\" class=\"form-control\" name=\"dateInput\" \r\n              value={formData.dateInput} onChange={handleChange} placeholder=\"Enter your Date of Birth \"/> \r\n            </div>\r\n              {/*  selection Field  */}\r\n           <div class=\"form-group\">\r\n            <label clSs=\"form-label\"> Select your Year of Entry to Medical School</label> <br/>\r\n                <select name=\"selectInput\" class=\"form-control\" value={formData.selectInput} onChange={handleChange}>\r\n                    <option value=\"2018\" selected> 2018</option>\r\n                    <option value=\"2019\"> 2019</option>\r\n                    <option value=\"2020\"> 2020</option>\r\n                    <option value=\"2021\"> 2021</option>\r\n                    <option value=\"2022\"> 2022</option>\r\n                    <option value=\"2023\"> 2023</option>\r\n                    <option value=\"2024\"> 2024</option>\r\n                </select>\r\n           </div>\r\n                  {/*  Sex field */}\r\n           <div class=\"form-group\">\r\n            <label class=\"form-label\">Are you prepared ? </label> <br/>\r\n            <input type=\"checkbox\" class=\"form-check-input\" name=\"checkboxInput\" checked={formData.checkboxInput} onChange={handleChange} />\r\n\r\n           </div>\r\n           <div class=\"form-group\"> \r\n            <textarea cols=\"7\" rows=\"7\" class=\"form-control\" name=\"textareaInput\"value={formData.textareaInput} onChange={handleChange} placeholder=\"Enter your Bio\" />\r\n           </div>\r\n            {/* A ternary is used by the button here to display update or create , dependning\r\n            on if the formData.id is present or not. */}\r\n           <button type=\"submit\"> {formData.id ? \"Update\" : \"Create\" } </button> \r\n        </form>\r\n        <ul>\r\n        {items.map((item)=>(\r\n                <li key={item.id}>\r\n                    { item.textInput}\r\n                    <button onClick={()=>handleEdit(item.id)}> Edit </button>\r\n                    <button onClick={()=>handleDelete(item.id)} class=\"red\">Delete </button> \r\n\r\n                </li>\r\n            ))}\r\n        \r\n        </ul>\r\n    </div>\r\n    </>\r\n\r\n   )\r\n\r\n}\r\n\r\nexport default Form ","import React from 'react'\r\n\r\n\r\n\r\nconst profile={\r\n    name:\"Heddy Lamerr\",\r\n    image:\"https://i.imgur.com/yXOvdOSs.jpg\",\r\n    imageSize:90\r\n\r\n}\r\nfunction Profile()\r\n{\r\n    return(\r\n        <>\r\n        <h3> (1) Just a simple Profile </h3> \r\n        <h4> { profile.name } </h4>\r\n        <img \r\n        className=\"avatar\"\r\n        src={profile.image}\r\n        alt={'Picture of ' + profile.name }\r\n        style={{\r\n            width:profile.imageSize,\r\n            height:profile.imageSize\r\n        }}\r\n\r\n        />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile ","import React, {useState} from 'react'\r\n\r\n\r\n\r\nfunction Square({value,onSquareClick}) \r\n//Please note that the onSquareClick is a function passed as prop from the Board Component \r\n//When the button is clicked, the onSquareClick function does something .\r\n//The Square is to display the value passed into it.\r\n{\r\n     \r\n    return (\r\n        <button className=\"square\" onClick={onSquareClick}> {value} </button>\r\n    )\r\n}\r\n//LoGIC 1: Create a Baard to create the various buttons and numbers\r\n//....This is achieved with the Square component \r\n//....The Square component also has arguments passed in to display differing value  \r\n//...controlled f=by the function onSquareClick \r\n\r\nfunction Board()\r\n{\r\n    //LOGIC : We need to check the next player identity , is it X or O ?\r\n    const [xisNext, setxisNext] = useState(true); \r\n    //LOGIC: We set the initial values of our buttons to null or nothing .\r\n    const [squares,setSquares]=useState(Array(9).fill(null))\r\n   \r\n\r\n  \r\n    function handleClick(i)\r\n    {\r\n        //LOGIC 1: \"i\" here means that we are sending n index to handleClick from Square component eg 1\r\n        \r\n    \r\n        if(squares[i] || Winner(squares)){\r\n            return\r\n        }\r\n        const nextSquares = squares.slice(); \r\n        //This method creates a copy of the squares array initially created \r\n        //We utilize the logix xisnext to be switching between the two users\r\n        if(xisNext)\r\n        {\r\n            nextSquares[i] =\"X\" \r\n            setxisNext(!xisNext) \r\n            //The initial true condition now changes to false  so we can update  the next player e.g., \"O\"\r\n\r\n        }\r\n        else\r\n        {\r\n            nextSquares[i]=\"O\"\r\n        }\r\n       \r\n        setSquares(nextSquares)\r\n        setxisNext(!xisNext);\r\n\r\n    }\r\n    const winner=Winner(squares)\r\n    let status\r\n    if(winner)\r\n    {\r\n        status=\"Winner is : \" + winner \r\n        //Don't forget the Winner function was to return either X or O \r\n    }\r\n    else\r\n    {\r\n        status=\"Next Player is : \" + (xisNext ? \"X\":\"O\") \r\n        //Let play continue if there is no winner \r\n    }\r\n    //This state will help us switch between our users in the handleClick Function \r\n    //We create an array in the parent component here that can set the states of the squares automatically\r\n   //This fills the arrays with null value at first \r\n\r\n    return (\r\n        <>\r\n        <h4>TicTacToe Game </h4>\r\n        <p> <b> Status of the Game </b> <br/> {status} </p>\r\n            <div className=\"board-row\">\r\n                {/* Please remember each square is returning a value passed as prop from here \r\n                In that case, lets store each values of the square to the values of the sqares array in the Board component \r\n\r\n                */}\r\n                 {/* It takes the first value of the squares array */}  \r\n                <Square value={squares[0]} onSquareClick={()=>handleClick(0)} /> {/* We are connecting the onSquareClick prop to a handleClick function to manage the states of our Square Component */}  \r\n                <Square value={squares[1]} onSquareClick={()=>handleClick(1) } />\r\n                <Square value={squares[2]} onSquareClick={()=>handleClick(2) }/>\r\n            </div>\r\n             {/*What do you think the initial values are, of course its null ...*/}  \r\n              <div className=\"board-row\">\r\n              <Square value={squares[3]} onSquareClick={()=>handleClick(3) } /> {/* Note that is being passed into handle click is like an array index */}\r\n              <Square value={squares[4]} onSquareClick={()=>handleClick(4) }/>\r\n              <Square value={squares[5]} onSquareClick={()=>handleClick(5) }/>\r\n            </div>\r\n            {/* remember also that 9 values are created in the array, each square component takes one of them */}\r\n              <div className=\"board-row\">\r\n              <Square value={squares[6]} onSquareClick={()=>handleClick(6) }/>\r\n              <Square value={squares[7]} onSquareClick={()=>handleClick(7) }/>\r\n              <Square value={squares[8]} onSquareClick={()=>handleClick(8) }/> \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction Winner(squares)\r\n{\r\n    const lines=[\r\n       [0,1,2], //horizontal win \r\n       [3,4,5], //horizontal win\r\n       [6,7,8], //horizontal win\r\n       [0,3,6], //vertival win\r\n       [1,4,7], //vertical win\r\n       [2,5,8], //vertical win\r\n       [0,4,8], //Diagonal win\r\n       [2,4,6] //Diagonal win\r\n\r\n    ];\r\n    for (let i=0; i<lines.length;i++)\r\n    {\r\n        const [a,b,c]=lines[i] //destructuring the 3 values into a,b and c e.g [0,1,2]\r\n        //The goal below is to check is 'X' or 'O', is found at the points \r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\r\n        {\r\n            return squares[a]\r\n        }\r\n\r\n\r\n    }\r\n    return null\r\n}\r\n\r\n\r\n\r\n\r\nexport default Board ","import React , { useState,useEffect} from 'react'\r\n\r\n\r\nfunction CheckNumber(){\r\n    const [value,setValue]=useState(0)\r\n    const [mesage,setMessage]=useState('')\r\n\r\n\r\n    useEffect(()=>{\r\n        setMessage(value%2===0?\"Even Number\":\"Odd Number\")\r\n\r\n    },[value])\r\n\r\n    const increment=()=>{\r\n        setValue(value+1);\r\n\r\n    }\r\n    return(\r\n        <>\r\n        <h4>Is Number Odd or Even ?</h4> \r\n        <p> Message : </p>\r\n        <button onClick={increment}> Increment  </button>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default CheckNumber ","import React , {useState} from 'react'\r\n\r\n\r\nconst GradingForm=({onGradeSubmit})=>{ //We got the onGradeSubmit as a prop and its a function \r\n    const [student,setStudent]=useState('')\r\n    const [grade,setGrade]=useState('')   \r\n\r\n   const  handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        onGradeSubmit({student,grade}); //It collects the student and its grade\r\n        setStudent('')\r\n        setGrade('')\r\n\r\n\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\"\r\n                placeholder=\"Enter your Name\"\r\n                value={student}\r\n                onChange={(e)=>setStudent(e.target.value)} \r\n                />\r\n                <input type=\"text\"\r\n                placeholder=\"Grade\"\r\n                value={grade}\r\n                onChange={(e)=>setGrade(e.target.value)}\r\n\r\n                />\r\n                <button type=\"submit\"> Submit Details </button> \r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const GradingSummary=({grades})=>{\r\n\r\n    return(\r\n        <div className=\"summary\">\r\n            <h5> Grades Summary </h5>\r\n            <ul>\r\n                {grades.map((grade,index)=>\r\n                <li key={index}>\r\n                    {grade.student} :{grade.grade}\r\n\r\n                </li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nfunction Grade(){\r\n    const[grades,setGrades]=useState([])\r\n\r\n    const handleGradeSubmit=()=>{\r\n        setGrades([...grades,grades])\r\n    }\r\n    return(\r\n        <>\r\n         <GradingForm onGradeSubmit={handleGradeSubmit} />\r\n\r\n{grades.length>0 &&(\r\n   \r\n    <GradingSummary grades={grades} />\r\n  \r\n)}\r\n\r\n        </>\r\n        \r\n//If there are grades, lets display, if not lets not\r\n        //We first of all show the form here and pass the function that stores the grades too\r\n       \r\n\r\n    )\r\n}\r\n\r\nexport default Grade ","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n/**The main purpose of a portal is to provide a way to \r\nrender content outside of the typical component hierarchy, \r\nwhich can be necessary for certain scenarios.\r\n**/\r\n\r\n\r\nconst PortalComponent=({targetId,children})=>{\r\n    const portalRoot=document.getElementById(targetId);\r\n    return portalRoot ?ReactDOM.createPortal(children,portalRoot) :null;\r\n\r\n\r\n}\r\n\r\nexport default PortalComponent ","import React, {useState} from 'react'\r\n\r\n\r\nconst questions=[\r\n    {\r\n    question:\"What is the capital of Nigeria ?\",\r\n    options:[\"Paris\",\"Abuja\",\"Accra\",\"Washington DC\"],\r\n    correctAnswer:\"Abuja\"\r\n        \r\n    },\r\n    {\r\n    question:\"What is the capital of Israel ?\",\r\n    options:[\"Tel Aviv\",\"London\",\"Jerusalem\",\"Damascus\"],\r\n    correctAnswer:\"Tel Aviv\"\r\n        \r\n    },\r\n   \r\n    {\r\n    question:\"What is the capital of Russia ?\",\r\n    options:[\"Dubai\",\"Moscow\",\"Accra\",\"Berlin\"],\r\n    correctAnswer:\"Moscow\"\r\n        \r\n    },\r\n   \r\n    {\r\n    question:\"What is the capital of Oyo State ?\",\r\n    options:[\"Lagos\",\"Moscow\",\"Ibadan\",\"Molete\"],\r\n    correctAnswer:\"Ibadan\"\r\n        \r\n    }\r\n   \r\n    \r\n]\r\n\r\n\r\nfunction Quiz()\r\n{\r\n    const [currentQuestion,setCurrentQuestion]=useState(0)\r\n    const [score,setScore]=useState(0)\r\n    const [showScore,setShowScore]=useState(false)\r\n\r\n    const handleAnswerClick=(selectedOption)=>{\r\n        if(selectedOption ===questions[currentQuestion].correctAnswer){\r\n            setScore(score+1);\r\n        }\r\n\r\n        const nextQuestion=currentQuestion +1;\r\n        if(nextQuestion <questions.length){\r\n            setCurrentQuestion(nextQuestion);\r\n        }else{\r\n            setShowScore(true);\r\n        }\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className=\"quiz-container\">\r\n            <h3> Simple Quiz Application </h3>\r\n            {showScore ? (\r\n            <div className=\"score-section\">\r\n                You scored {score} out of {questions.length}\r\n\r\n            </div>\r\n            ): \r\n            (\r\n                <>\r\n                <div className=\"question-section\">\r\n                    <div className=\"question-count\">\r\n                        <span> Question {currentQuestion +1} </span> /{questions.length}\r\n                    </div>\r\n                    <div className=\"question-text\">\r\n                        {questions[currentQuestion].question}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"answer-section\">\r\n                    {questions[currentQuestion].options.map((option)=>(<button key={option} onClick={()=>handleAnswerClick(option)}> {option} </button>))}\r\n                </div>\r\n                </>\r\n\r\n            )\r\n            }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Quiz\r\n\r\n","import React from 'react'\nimport './App.css';\nimport WeatherComponent from './components/Weather.js'\nimport TodoApp from './components/TodoApp.js'\nimport Form from './components/CrudForm.js'\nimport Profile from './components/Profile.js'\nimport Board from './components/TicTacToe'\nimport CheckNumber from './components/Number'\nimport Grade from './components/StudentGrade'\nimport GradingSummary from './components/StudentGrade'\n\n//using the Portal Component here \nimport PortalComponent from './portal/PortalComponent'\nimport Quiz from './components/QuizApp'\n/**\n *  \n * import { Link } from 'react-router-dom'\n * <nav>\n            <ul>\n              <li><Link to=\"/\"> Home </Link></li>\n              <li><Link to=\"/about\"> About us </Link></li>\n              <li> <Link to=\"/contact\"> Contact </Link></li>\n            </ul>\n          </nav>\n */\n\nfunction App() {\n  return (\n    <>\n    \n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <h3> Chasfat Projects </h3>\n        </div>\n       <h1> Chasfat Projects working on React </h1>\n       <Profile />\n       <br/>\n       <CheckNumber />\n       <br/>\n        <WeatherComponent />\n        <br/>\n        <TodoApp />\n        <br/>\n        <Form />\n        <br/>\n        <Board />\n        {/* Portal Component used here */}\n        <br/>\n        <PortalComponent targetId=\"grading-summary-root\">\n          <GradingSummary />\n        </PortalComponent>\n        <br/>\n        <Quiz />\n      \n      </header>\n      \n    </div>\n     \n    </>\n  );\n}\n\nexport default App \n\n\n\n","import React from 'react'\r\n\r\n\r\n\r\nconst About=()=>\r\n{\r\n   const headstyle={\r\n        color:\"#fff\",\r\n        fontSize:\"20px\",\r\n        letterSpacing:\"5px\"\r\n    }\r\n    return(\r\n        <>\r\n            <h1 style={headstyle}> Welcome to About Page </h1>\r\n            <hr/>\r\n        </>\r\n    )\r\n    \r\n\r\n}\r\n\r\nexport default About ","import React from 'react'\r\nimport styles from './main.module.css'\r\n\r\n\r\nconst Contact=()=>\r\n{\r\n    return(\r\n        <>\r\n        <div>\r\n        <h1 style={styles.h1}> Welcome to the Contact Page </h1>\r\n        <hr/>\r\n        <p> Contact Chasfat Projects through <a href=\"https://chasfatprojects.netlify.app\" target=\"_blank\" rel=\"noopener noreferrer\"> Contact Chasfat </a></p>\r\n\r\n        </div>\r\n      \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\n\r\n\r\n\r\nconst Home=()=>\r\n{\r\n    return(\r\n        <h2> Welcome to the Home Page </h2>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport {Link,Outlet} from 'react-router-dom'\r\n\r\n\r\nconst Layout=()=>{\r\n    return(\r\n        <>\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\"> Home </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"contact\">Contact </Link> \r\n                </li>\r\n                <li>\r\n                    <Link to=\"app\"> Applications </Link>\r\n                </li>\r\n                <li> \r\n                    <Link to=\"about\"> About </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        <Outlet />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout ","import React from 'react'\r\n\r\n\r\n\r\n\r\nconst NotFound=()=>{\r\n    return(\r\n        <h1 style={{ color:\"#ff004f\"}}> Ooops!!! 404 Not Found  </h1>\r\n    )\r\n}\r\n\r\nexport default NotFound ","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App'\nimport { BrowserRouter,Routes,Route} from 'react-router-dom'\nimport About from './About'\nimport Contact from './Contact'\nimport Home from './Home'\nimport Layout from './Layout'\nimport NotFound from './NotFound'\n\n\n\n\n\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        \n          <Routes>\n            <Route path=\"/\" element={<Layout />}>\n              <Route index element={<Home />} />\n              <Route path=\"contact\" element={<Contact />} />\n              <Route path=\"app\" element={<App />} />\n              <Route path=\"about\" element={<About />} />\n              <Route path=\"*\" element={<NotFound />} />\n            </Route>\n\n          </Routes>\n            \n          \n\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n\n\n"],"sourceRoot":""}